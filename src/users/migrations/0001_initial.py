# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-13 11:05
from __future__ import unicode_literals

import core.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='user/photo/', verbose_name='Фото')),
                ('first_name', models.CharField(max_length=30, verbose_name='имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='фамилия')),
                ('middle_name', models.CharField(max_length=30, verbose_name='отчество')),
                ('gender', models.CharField(choices=[('male', 'мужчина'), ('female', 'женщина')], max_length=8, verbose_name='пол')),
                ('birthday', models.DateField(verbose_name='дата рождения')),
                ('birthplace', models.TextField(verbose_name='место рождения')),
                ('passport_number', models.PositiveSmallIntegerField(verbose_name='номер паспорта')),
                ('passport_issued', models.CharField(max_length=256, verbose_name='паспорт выдан')),
                ('passport_issued_date', models.DateField(verbose_name='дата выдачи паспорта')),
                ('registration_address', models.TextField(verbose_name='адрес места жительства')),
                ('residential_address', models.TextField(verbose_name='фактическое место жительства')),
                ('place_of_study', models.CharField(max_length=265, verbose_name='место учёбы')),
                ('speciality', models.CharField(max_length=256, verbose_name='специальность/направление подготовки, курс')),
                ('working', models.BooleanField(verbose_name='работаю')),
                ('work_place', models.CharField(blank=True, max_length=256, verbose_name='место работы')),
                ('position', models.CharField(max_length=128, verbose_name='должность')),
                ('employer_phone', core.fields.PhoneField(blank=True, max_length=20, verbose_name='контактный телефон работодателя')),
                ('phone', core.fields.PhoneField(max_length=20, verbose_name='контактный телефон')),
                ('english', models.CharField(choices=[('elementary', 'начинающий'), ('intermediate', 'средний'), ('upper intermediate', 'выше среднего'), ('fluent', 'свободно')], max_length=32, verbose_name='владение английским языком')),
                ('other_language', models.CharField(blank=True, max_length=256, verbose_name='владение другими языками')),
                ('has_experience', models.BooleanField(verbose_name='опыт волонтёрской деятельности')),
                ('experience_in_sport_events', models.TextField(blank=True, verbose_name='спортивные мероприятия, в которых принимал участие в качестве волонтера, описание своих выполняемых функций в каждом из мероприятий')),
                ('experience_in_other_events', models.TextField(blank=True, verbose_name='иные мероприятия, в которых принимал участие в качестве волонтера, описание своих выполняемых функций в каждом из мероприятий')),
                ('attracting', models.CharField(choices=[('experience', 'получение нового опыта'), ('meeting', 'встречи с новыми людьми'), ('helping', 'возможность помогать другим'), ('contributing', 'вклад в общее дело'), ('new interesting', 'новые интересы'), ('discovery', 'открытие для себя новых сфер')], max_length=32, verbose_name='что привлекает в волонтерской деятельности?')),
                ('lacking', models.TextField(verbose_name='каких навыков и знаний в волонтерской деятельности не хватает?')),
                ('benefits', multiselectfield.db.fields.MultiSelectField(choices=[('command experience', 'получение нового уникального опыта и навыков работы в команде'), ('communication', 'расширение круга общения'), ('personal growth', 'личностный рост и самореализация'), ('knowledge', 'расширение интересов и знаний'), ('relation', 'новые связи и потенциальные возможности'), ('foreign language', 'практика иностранных языков и широкое межкультурное общение'), ('see event inside', 'шанс увидеть мероприятие изнутри'), ('part of', 'возможность почувствовать себя значимой частью мега-события'), ('opportunity', 'открытие новых перспектив'), ('acceptance', 'признание окружающих'), ('respect', 'гордость и уважение близких')], max_length=140, verbose_name='что Вы хотите получить от участия в качестве городского волонтера в Чемпионате мира по футболу FIFA 2018 в России?')),
                ('interesting_tourist_information', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='информационно-туристическая служба')),
                ('interesting_transportation', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='транспортная служба')),
                ('interesting_language', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='лингвистическая служба')),
                ('interesting_festival', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='фестиваль болельщиков FIFA')),
                ('strengths', models.TextField(verbose_name='описание своих сильных сторон')),
                ('weaknesses', models.TextField(verbose_name='описание своих слабых сторон')),
                ('hobby', models.TextField(verbose_name='описание хобби')),
                ('evaluationResponsibility', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='ответственность')),
                ('evaluationStressResistance', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='стрессоустойчивость')),
                ('evaluationCommunicability', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='коммуникабельность')),
                ('evaluationDiligence', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='исполнительность')),
                ('evaluationGoodwill', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='доброжелательность')),
                ('evaluationTeamworkSkills', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='умение работать в команде')),
                ('has_сar', models.BooleanField(verbose_name='имею автомобиль')),
                ('car_detail', models.CharField(blank=True, max_length=256, verbose_name='категория водительского удостоверения и стаж вождения')),
                ('work_period', models.CharField(choices=[('first', '13 – 23 июня 2018 года'), ('second', '24 июня – 4 июля 2018 года'), ('third', '5 – 15 июля 2018 года'), ('any', 'в любой указанный период')], max_length=8, verbose_name='период работы во время чемпионата')),
                ('work_shift', models.CharField(choices=[('first', '10:00 – 16:00'), ('second', '16:00 – 22:00')], max_length=8, verbose_name='смена работы во время чемпионата')),
                ('participate_in_other', models.NullBooleanField(verbose_name='готовы ли Вы принимать участие в других мероприятиях, осуществляемых в рамках подготовки и проведения игр ЧМ-2018?')),
                ('contraindications', models.TextField(verbose_name='наличие медицинских противопоказаний к осуществлению работы?')),
                ('clothes_size_male', models.PositiveSmallIntegerField(blank=True, choices=[(42, 'XXS (42)'), (44, 'XS (44)'), (46, 'S (46)'), (48, 'M (48)'), (50, 'L (50)'), (52, 'XL (52)'), (54, 'XXL (54)'), (56, '2XL (56)'), (58, '3XL (58)')], null=True, verbose_name='мужской размер одежды')),
                ('clothes_size_female', models.PositiveSmallIntegerField(blank=True, choices=[(42, 'XS (42)'), (44, 'S (44)'), (46, 'M (46)'), (48, 'L (48)'), (50, 'XL (50)'), (52, 'XXL (52)')], null=True, verbose_name='женский размер одежды')),
                ('shoe_size', models.PositiveSmallIntegerField(choices=[(34, '34'), (35, '35'), (36, '36'), (37, '37'), (38, '38'), (39, '39'), (40, '40'), (41, '41'), (42, '42'), (43, '43'), (44, '44'), (45, '45'), (46, '46'), (47, '46')], verbose_name='размер обуви')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'профиль пользователя',
                'verbose_name_plural': 'профили пользователей',
            },
        ),
    ]
